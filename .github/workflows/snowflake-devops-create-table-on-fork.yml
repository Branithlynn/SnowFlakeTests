name: snowflake-devops-create-table-on-fork

# Controls when the action will run. 
on:
  fork:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create-file:
    runs-on: ubuntu-latest

    steps:
      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.16-linux_x86_64.bash
          chmod +x snowsql-1.2.16-linux_x86_64.bash
          ./snowsql-1.2.16-linux_x86_64.bash
          
      - name: Create snowflake table
        env: 
          SNOWSQL_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SF_USER }}
          SNOWSQL_PASSWORD: ${{ secrets.SF_PASSWORD }}
          SNOWQSL_WAREHOUSE: ${{secrets.SD_WAREHOUSE}}
        run: |
          snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER -p $SNOWSQL_PASSWORD -d DEMO_DB -w $SNOWSQL_WAREHOUSE -s PUBLIC -f test_table.sql
          
          
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange
          
          echo "Step 2: Running schemachange"
          schemachange -f $GITHUB_WORKSPACE/migrations -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
